package net.ivarcode.camden;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;

import javax.swing.JApplet;

import net.ivarcode.camden.reference.Game;
import net.ivarcode.camden.reference.Location;
import net.ivarcode.camden.reference.Move;
import net.ivarcode.camden.reference.Piece;

/*
 * ChessGame
 * Camden I Wagner
 * Main.java 
 */


public class Main extends JApplet {
	
	/**
	 * serial version
	 */
	private static final long serialVersionUID = 1L;

	public void init() {

		game = new Game(sideWidth, topHeight, sqDim);

		addMouseListener(new MouseAdapter() {
			int a = -1000, b = -1000;
			int c = -1000, d = -1000;
			Piece nullPiece = new Piece();

			public void mousePressed(MouseEvent e) {
				int x = e.getX ();
				int y = e.getY ();
				
			}
			public void mouseReleased(MouseEvent e)
			{

			}
		});
		// Attach a mouse motion listener to the applet. That listener listens
		// for mouse drag events.
		addMouseMotionListener (new MouseMotionAdapter ()
		{
			public void mouseDragged (MouseEvent e)
			{
				
			}
		});
	}

	public void paint(Graphics g) {
		if (inDrag) {
			updateSquares(g);
		} else {
			//System.out.println("PAINTING NOW");
			Dimension d = getSize();
			g.setColor(Color.WHITE);
			g.fillRect(0, 0, d.width, d.height);
			game.drawBoard(g);
			drawPieces(g);
		}
	}
	private void drawPieces(Graphics g) {
		Location loc;
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 8; j++) {
				loc = new Location(i,j);
				if (game.getPiece(loc) != null) {
					game.drawPiece(g, new Location(i,j));
				}
			}
		}
	}

	public void updateSquares(Graphics g) {
		game.drawSquare(g, old_dest);
		game.drawSquareTinted(g, dest);
		game.drawPiece(g, old_dest);
		game.drawSquare(g, src);
		game.drawPieceAt(g, src, dest);
	}

}
